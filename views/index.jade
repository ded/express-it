doctype
html
  head
    title ExpressIt Admin
    style.

      html { background: #eee; font-family: "Helvetica Neue", sans-serif;margin: 0 1rem; }
      body { max-width: 800px; margin: 1rem auto; background: #fff; padding: 1rem;border-radius: 8px; position: relative; }
      textarea { width: 100%; min-height: 3rem; padding: .25rem; border-radius: 4px; border: 1px solid #ccc;box-sizing: border-box; }
      input[type="text"] { display: block; margin: .25rem 0; padding: .5rem; border-radius: 4px;border: 1px solid #ccc; width: 100%; box-sizing: border-box; }

      .btn {
        display: inline-block;
        margin-bottom: 0;
        padding: .5rem 1rem;
        border-radius: 4px;
        border: none;
        outline: 0;
        text-decoration:none;
        color: #fff;
        background-color: #59ADEB;
        text-align: center;
        cursor: pointer;
      }

      .new-keys {
        position: absolute;
        top: 1rem;
        right: 1rem;
      }
      .create-new-key {
        opacity: 0;
        position: absolute;
        top: -50rem;
        left: 1rem;
        right: 1rem;
        z-index: 1;
        background: #fff;
        padding: 1rem;
        border-radius: 4px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 -1px 1px rgba(0, 0, 0, 0.1);
        transition: all .3s ease-in;
      }
      .manage {
        position: relative;
      }
      .new-key-active .create-new-key {
        transition: all .3s ease-in;
        opacity: 1;
        top: 1rem;
      }
      .close {
        position: absolute;
        top: 0;
        right: 0;
        padding: .5rem;
        font-size: 1.6rem;
        line-height: 1;
        cursor: pointer;
      }
      input,textarea {
        font-size: 1.1rem;
      }
  body
    h1 Translation Center
    .new-keys
      .btn.toggle-new-key Create new Key
    .create-new-key
      .close.toggle-new-key!= '&times;'
      h2 Create new Translation
      p: input.new-key-name(type='text', placeholder='new field key: eg, welcome.msg.home')
      p: .btn.save-new-key Save
    .manage
      - allKeys = []
      each key in keys
        each val, index in key.value
          if !~allKeys.indexOf(index)
            - allKeys.push(index)
            h2 #{index}
            each variant in variants
              p #{variant}
              each item in keys
                if item.variant == variant
                  .group
                    p: textarea(data-key=index, data-variant=variant)!= item.value[index]
                    p: .btn.save-variant save
    script(src='http://code.jquery.com/jquery-2.1.4.min.js')
    script.
      $('.toggle-new-key').on('click', function () {
        $('body').toggleClass('new-key-active')
      })

      $('.save-new-key').on('click', function () {
        $.ajax({
          type: 'POST',
          url: window.location.pathname + '/create',
          data: { key: $('.new-key-name').val() },
          success: function (resp) {
            if (resp.ok) window.location.reload()
          },
          dataType: 'json'
        })
      })

      $('.btn.save-variant').on('click', function () {
        var $textarea = $(this).closest('.group').find('textarea')
        var data = $textarea.data()
        var value = $textarea.val()
        $.ajax({
          type: 'PUT',
          url: window.location.pathname + '/update',
          data: { data: data, value: value },
          success: function (resp) {
            if (resp.ok) window.location.reload()
          },
          dataType: 'json'
        })
      })
